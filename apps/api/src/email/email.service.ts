import { Injectable, Logger } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { Resend } from 'resend';

interface EmailOptions {
  to: string | string[];
  subject: string;
  html?: string;
  text?: string;
  replyTo?: string;
}

@Injectable()
export class EmailService {
  private readonly logger = new Logger(EmailService.name);
  private resend: Resend;
  private readonly fromEmail: string;
  private readonly appName = 'GMAH Platform';
  private readonly baseUrl: string;

  constructor(private configService: ConfigService) {
    const apiKey = this.configService.get<string>('RESEND_API_KEY');
    this.fromEmail = this.configService.get<string>('EMAIL_FROM') || 'noreply@gmah.org';
    this.baseUrl = this.configService.get<string>('FRONTEND_URL') || 'http://localhost:3000';
    
    if (apiKey) {
      this.resend = new Resend(apiKey);
      this.logger.log('Resend email service initialized');
    } else {
      this.logger.warn('RESEND_API_KEY not found - emails will be logged to console');
    }
  }

  async sendEmail(options: EmailOptions): Promise<void> {
    try {
      if (!this.resend) {
        // Development mode - log to console
        this.logger.log('üìß Email (Development Mode):');
        this.logger.log(`To: ${Array.isArray(options.to) ? options.to.join(', ') : options.to}`);
        this.logger.log(`Subject: ${options.subject}`);
        this.logger.log(`Content: ${options.text || 'HTML content'}`);
        return;
      }

      const emailData: any = {
        from: `${this.appName} <${this.fromEmail}>`,
        to: Array.isArray(options.to) ? options.to : [options.to],
        subject: options.subject,
      };

      if (options.html) {
        emailData.html = options.html;
      }
      if (options.text) {
        emailData.text = options.text;
      }
      if (options.replyTo) {
        emailData.replyTo = options.replyTo;
      }

      const result = await this.resend.emails.send(emailData);

      this.logger.log(`Email sent successfully: ${result.data?.id}`);
    } catch (error) {
      this.logger.error('Failed to send email:', error);
      throw error;
    }
  }

  async sendWelcomeEmail(email: string, firstName: string): Promise<void> {
    const subject = `Bienvenue sur ${this.appName}`;
    const html = this.getWelcomeEmailTemplate(firstName);
    
    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `Bienvenue ${firstName}! Votre compte GMAH a √©t√© cr√©√© avec succ√®s.`,
    });
  }

  async sendPasswordResetEmail(email: string, resetToken: string, firstName?: string): Promise<void> {
    const resetUrl = `${this.baseUrl}/reset-password?token=${resetToken}`;
    const subject = 'R√©initialisation de votre mot de passe';
    const html = this.getPasswordResetTemplate(resetUrl, firstName);
    
    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `Cliquez sur ce lien pour r√©initialiser votre mot de passe: ${resetUrl}. Ce lien expire dans 1 heure.`,
    });
  }

  async sendLoanStatusEmail(
    email: string, 
    loanNumber: string, 
    status: string,
    firstName?: string,
    message?: string
  ): Promise<void> {
    const statusText = this.getLoanStatusText(status);
    const subject = `Mise √† jour de votre pr√™t ${loanNumber}`;
    const html = this.getLoanStatusTemplate(loanNumber, statusText, firstName, message);
    
    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `Votre pr√™t ${loanNumber} a √©t√© ${statusText}. ${message || ''}`,
    });
  }

  async sendGuaranteeRequestEmail(
    guarantorEmail: string,
    borrowerName: string,
    loanNumber: string,
    amount: number,
    guaranteeId: string
  ): Promise<void> {
    const signUrl = `${this.baseUrl}/guarantees/sign/${guaranteeId}`;
    const subject = `Demande de garantie pour le pr√™t ${loanNumber}`;
    const html = this.getGuaranteeRequestTemplate(borrowerName, loanNumber, amount, signUrl);
    
    await this.sendEmail({
      to: guarantorEmail,
      subject,
      html,
      text: `${borrowerName} vous demande d'√™tre garant pour son pr√™t de ${amount}‚Ç¨. Cliquez ici pour signer: ${signUrl}`,
    });
  }

  async sendPaymentReminderEmail(
    email: string,
    loanNumber: string,
    amount: number,
    dueDate: Date,
    firstName?: string
  ): Promise<void> {
    const subject = `Rappel: Paiement de ${amount}‚Ç¨ d√ª le ${this.formatDate(dueDate)}`;
    const html = this.getPaymentReminderTemplate(loanNumber, amount, dueDate, firstName);
    
    await this.sendEmail({
      to: email,
      subject,
      html,
      text: `Rappel: Votre paiement de ${amount}‚Ç¨ pour le pr√™t ${loanNumber} est d√ª le ${this.formatDate(dueDate)}.`,
    });
  }

  async sendLoanDisbursementEmail(
    borrowerEmail: string,
    borrowerName: string,
    loanNumber: string,
    amount: number,
    paymentMethod: string,
  ): Promise<void> {
    const subject = `D√©caissement effectu√© - Pr√™t ${loanNumber}`;
    const html = this.getLoanDisbursementTemplate(borrowerName, loanNumber, amount, paymentMethod);
    
    await this.sendEmail({
      to: borrowerEmail,
      subject,
      html,
      text: `Bonjour ${borrowerName}, les fonds de votre pr√™t ${loanNumber} d'un montant de ${amount}‚Ç¨ ont √©t√© d√©caiss√©s par ${paymentMethod}.`,
    });
  }

  async sendCommitteeNotificationEmail(
    emails: string[],
    loanNumber: string,
    borrowerName: string,
    amount: number
  ): Promise<void> {
    const reviewUrl = `${this.baseUrl}/committee/loans`;
    const subject = `Nouveau pr√™t √† examiner: ${loanNumber}`;
    const html = this.getCommitteeNotificationTemplate(loanNumber, borrowerName, amount, reviewUrl);
    
    await this.sendEmail({
      to: emails,
      subject,
      html,
      text: `Nouveau pr√™t √† examiner: ${loanNumber} de ${borrowerName} pour ${amount}‚Ç¨. Connectez-vous pour voter.`,
    });
  }

  // Email Templates
  private getWelcomeEmailTemplate(firstName?: string): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
            .button { display: inline-block; padding: 12px 30px; background: #667eea; color: white; text-decoration: none; border-radius: 5px; margin-top: 20px; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>Bienvenue sur GMAH Platform!</h1>
            </div>
            <div class="content">
              <h2>Bonjour ${firstName || 'l√†'},</h2>
              <p>Votre compte a √©t√© cr√©√© avec succ√®s sur la plateforme GMAH.</p>
              <p>Vous pouvez maintenant:</p>
              <ul>
                <li>Faire une demande de pr√™t sans int√©r√™t</li>
                <li>Suivre l'√©tat de vos demandes</li>
                <li>G√©rer vos remboursements</li>
                <li>Servir de garant pour d'autres membres</li>
              </ul>
              <a href="${this.baseUrl}/dashboard" class="button">Acc√©der √† mon compte</a>
              <p style="margin-top: 30px;">Si vous avez des questions, n'h√©sitez pas √† nous contacter.</p>
            </div>
            <div class="footer">
              <p>¬© 2024 GMAH Platform - Pr√™ts sans int√©r√™t conformes √† la Halakha</p>
              <p>Cet email a √©t√© envoy√© automatiquement, merci de ne pas y r√©pondre.</p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private getPasswordResetTemplate(resetUrl: string, firstName?: string): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #dc3545; color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
            .button { display: inline-block; padding: 12px 30px; background: #dc3545; color: white; text-decoration: none; border-radius: 5px; margin-top: 20px; }
            .warning { background: #fff3cd; border-left: 4px solid #ffc107; padding: 10px; margin-top: 20px; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>R√©initialisation de mot de passe</h1>
            </div>
            <div class="content">
              <h2>Bonjour ${firstName || 'l√†'},</h2>
              <p>Nous avons re√ßu une demande de r√©initialisation de mot de passe pour votre compte.</p>
              <p>Cliquez sur le bouton ci-dessous pour cr√©er un nouveau mot de passe:</p>
              <a href="${resetUrl}" class="button">R√©initialiser mon mot de passe</a>
              <div class="warning">
                <strong>‚ö†Ô∏è Important:</strong>
                <ul>
                  <li>Ce lien expire dans 1 heure</li>
                  <li>Si vous n'avez pas demand√© cette r√©initialisation, ignorez cet email</li>
                  <li>Pour votre s√©curit√©, ne partagez jamais ce lien</li>
                </ul>
              </div>
              <p style="margin-top: 30px;">Si le bouton ne fonctionne pas, copiez ce lien dans votre navigateur:</p>
              <p style="word-break: break-all; color: #667eea;">${resetUrl}</p>
            </div>
            <div class="footer">
              <p>¬© 2024 GMAH Platform - Pr√™ts sans int√©r√™t conformes √† la Halakha</p>
              <p>Cet email a √©t√© envoy√© automatiquement, merci de ne pas y r√©pondre.</p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private getLoanStatusTemplate(
    loanNumber: string, 
    status: string, 
    firstName?: string,
    message?: string
  ): string {
    const statusColor = this.getStatusColor(status);
    const statusIcon = this.getStatusIcon(status);
    
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: ${statusColor}; color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
            .status-badge { display: inline-block; padding: 8px 16px; background: ${statusColor}; color: white; border-radius: 20px; font-weight: bold; }
            .button { display: inline-block; padding: 12px 30px; background: #667eea; color: white; text-decoration: none; border-radius: 5px; margin-top: 20px; }
            .info-box { background: white; border-radius: 8px; padding: 20px; margin-top: 20px; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>${statusIcon} Mise √† jour de votre pr√™t</h1>
            </div>
            <div class="content">
              <h2>Bonjour ${firstName || 'l√†'},</h2>
              <p>Le statut de votre pr√™t a √©t√© mis √† jour:</p>
              <div class="info-box">
                <p><strong>Num√©ro de pr√™t:</strong> ${loanNumber}</p>
                <p><strong>Nouveau statut:</strong> <span class="status-badge">${status}</span></p>
                ${message ? `<p><strong>Message:</strong> ${message}</p>` : ''}
              </div>
              <a href="${this.baseUrl}/loans/my-loans" class="button">Voir mes pr√™ts</a>
            </div>
            <div class="footer">
              <p>¬© 2024 GMAH Platform - Pr√™ts sans int√©r√™t conformes √† la Halakha</p>
              <p>Cet email a √©t√© envoy√© automatiquement, merci de ne pas y r√©pondre.</p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private getGuaranteeRequestTemplate(
    borrowerName: string,
    loanNumber: string,
    amount: number,
    signUrl: string
  ): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #28a745; color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
            .amount-box { background: white; border-radius: 8px; padding: 20px; margin: 20px 0; text-align: center; }
            .amount { font-size: 32px; color: #28a745; font-weight: bold; }
            .button { display: inline-block; padding: 12px 30px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; margin-top: 20px; }
            .warning { background: #fff3cd; border-left: 4px solid #ffc107; padding: 10px; margin-top: 20px; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>Demande de garantie</h1>
            </div>
            <div class="content">
              <h2>Shalom,</h2>
              <p><strong>${borrowerName}</strong> vous demande d'√™tre garant pour son pr√™t aupr√®s de GMAH.</p>
              <div class="amount-box">
                <p>Montant du pr√™t:</p>
                <div class="amount">‚Ç¨${amount.toLocaleString()}</div>
                <p style="color: #666;">Pr√™t ${loanNumber}</p>
              </div>
              <p>En acceptant d'√™tre garant, vous vous engagez √† rembourser le pr√™t si l'emprunteur n'est pas en mesure de le faire.</p>
              <a href="${signUrl}" class="button">Examiner et signer la garantie</a>
              <div class="warning">
                <strong>‚ö†Ô∏è Important:</strong>
                <ul>
                  <li>Prenez le temps de lire les conditions avant de signer</li>
                  <li>Votre signature √©lectronique a valeur l√©gale</li>
                  <li>Vous pouvez refuser cette demande sans justification</li>
                </ul>
              </div>
            </div>
            <div class="footer">
              <p>¬© 2024 GMAH Platform - Pr√™ts sans int√©r√™t conformes √† la Halakha</p>
              <p>Cet email a √©t√© envoy√© automatiquement, merci de ne pas y r√©pondre.</p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private getPaymentReminderTemplate(
    loanNumber: string,
    amount: number,
    dueDate: Date,
    firstName?: string
  ): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #ffc107; color: #333; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
            .payment-box { background: white; border-radius: 8px; padding: 20px; margin: 20px 0; border: 2px solid #ffc107; }
            .amount { font-size: 28px; color: #333; font-weight: bold; }
            .button { display: inline-block; padding: 12px 30px; background: #667eea; color: white; text-decoration: none; border-radius: 5px; margin-top: 20px; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üìÖ Rappel de paiement</h1>
            </div>
            <div class="content">
              <h2>Bonjour ${firstName || 'l√†'},</h2>
              <p>Ceci est un rappel amical pour votre paiement √† venir:</p>
              <div class="payment-box">
                <p><strong>Pr√™t:</strong> ${loanNumber}</p>
                <p><strong>Montant d√ª:</strong> <span class="amount">‚Ç¨${amount.toLocaleString()}</span></p>
                <p><strong>Date d'√©ch√©ance:</strong> ${this.formatDate(dueDate)}</p>
              </div>
              <p>Pour effectuer votre paiement, connectez-vous √† votre espace personnel.</p>
              <a href="${this.baseUrl}/loans/my-loans" class="button">Effectuer le paiement</a>
              <p style="margin-top: 30px; color: #666;">
                Si vous avez d√©j√† effectu√© ce paiement, vous pouvez ignorer ce rappel.
              </p>
            </div>
            <div class="footer">
              <p>¬© 2024 GMAH Platform - Pr√™ts sans int√©r√™t conformes √† la Halakha</p>
              <p>Cet email a √©t√© envoy√© automatiquement, merci de ne pas y r√©pondre.</p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private getLoanDisbursementTemplate(
    borrowerName: string,
    loanNumber: string,
    amount: number,
    paymentMethod: string
  ): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #28a745; color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
            .disbursement-box { background: white; border-radius: 8px; padding: 20px; margin: 20px 0; border: 2px solid #28a745; }
            .amount { font-size: 32px; color: #28a745; font-weight: bold; }
            .details { margin: 15px 0; padding: 15px; background: #f1f3f5; border-radius: 5px; }
            .button { display: inline-block; padding: 12px 30px; background: #667eea; color: white; text-decoration: none; border-radius: 5px; margin-top: 20px; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üí∞ D√©caissement effectu√©!</h1>
            </div>
            <div class="content">
              <h2>Bonjour ${borrowerName},</h2>
              <p>Nous avons le plaisir de vous informer que les fonds de votre pr√™t ont √©t√© d√©caiss√©s avec succ√®s.</p>
              <div class="disbursement-box">
                <p><strong>Num√©ro de pr√™t:</strong> ${loanNumber}</p>
                <p><strong>Montant d√©caiss√©:</strong></p>
                <p class="amount">‚Ç¨${amount.toLocaleString()}</p>
                <p><strong>M√©thode de paiement:</strong> ${paymentMethod}</p>
              </div>
              <div class="details">
                <h3>Prochaines √©tapes:</h3>
                <ul>
                  <li>Les fonds devraient √™tre disponibles dans les 24-48 heures selon votre banque</li>
                  <li>Votre premier remboursement sera d√ª selon l'√©ch√©ancier convenu</li>
                  <li>Vous pouvez consulter votre calendrier de remboursement dans votre espace personnel</li>
                </ul>
              </div>
              <a href="${this.baseUrl}/loans/my-loans" class="button">Voir mes pr√™ts</a>
              <p style="margin-top: 30px; color: #666;">
                Si vous avez des questions, n'h√©sitez pas √† nous contacter.
              </p>
            </div>
            <div class="footer">
              <p>¬© 2024 GMAH Platform - Pr√™ts sans int√©r√™t conformes √† la Halakha</p>
              <p>Cet email a √©t√© envoy√© automatiquement, merci de ne pas y r√©pondre.</p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  private getCommitteeNotificationTemplate(
    loanNumber: string,
    borrowerName: string,
    amount: number,
    reviewUrl: string
  ): string {
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: #6c757d; color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
            .loan-box { background: white; border-radius: 8px; padding: 20px; margin: 20px 0; }
            .button { display: inline-block; padding: 12px 30px; background: #6c757d; color: white; text-decoration: none; border-radius: 5px; margin-top: 20px; }
            .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>Nouveau pr√™t √† examiner</h1>
            </div>
            <div class="content">
              <h2>Cher membre du comit√©,</h2>
              <p>Un nouveau pr√™t a √©t√© soumis et n√©cessite votre examen:</p>
              <div class="loan-box">
                <p><strong>Num√©ro de pr√™t:</strong> ${loanNumber}</p>
                <p><strong>Emprunteur:</strong> ${borrowerName}</p>
                <p><strong>Montant demand√©:</strong> ‚Ç¨${amount.toLocaleString()}</p>
              </div>
              <p>Veuillez vous connecter pour examiner les d√©tails et voter.</p>
              <a href="${reviewUrl}" class="button">Examiner le pr√™t</a>
              <p style="margin-top: 30px; color: #666;">
                Votre vote est important pour la d√©cision finale du comit√©.
              </p>
            </div>
            <div class="footer">
              <p>¬© 2024 GMAH Platform - Pr√™ts sans int√©r√™t conformes √† la Halakha</p>
              <p>Cet email a √©t√© envoy√© automatiquement, merci de ne pas y r√©pondre.</p>
            </div>
          </div>
        </body>
      </html>
    `;
  }

  // Helper methods
  private getLoanStatusText(status: string): string {
    const statusMap: Record<string, string> = {
      APPROVED: 'approuv√©',
      REJECTED: 'rejet√©',
      DISBURSED: 'd√©caiss√©',
      COMPLETED: 'compl√©t√©',
      UNDER_REVIEW: 'en cours d\'examen',
      ACTIVE: 'actif',
      DEFAULTED: 'en d√©faut',
    };
    return statusMap[status] || status.toLowerCase();
  }

  private getStatusColor(status: string): string {
    if (status.includes('approuv√©') || status.includes('compl√©t√©')) return '#28a745';
    if (status.includes('rejet√©') || status.includes('d√©faut')) return '#dc3545';
    if (status.includes('examen')) return '#ffc107';
    return '#667eea';
  }

  private getStatusIcon(status: string): string {
    if (status.includes('approuv√©') || status.includes('compl√©t√©')) return '‚úÖ';
    if (status.includes('rejet√©') || status.includes('d√©faut')) return '‚ùå';
    if (status.includes('examen')) return '‚è≥';
    return 'üìã';
  }

  private formatDate(date: Date): string {
    return new Intl.DateTimeFormat('fr-FR', {
      day: '2-digit',
      month: 'long',
      year: 'numeric',
    }).format(date);
  }
}